LOAD "testlib.lgo
LOAD "uiautomationlib.lgo

TO ERASETEST.ERASEPROCEDURE

   DEFINE "ERASETEST.ERASEDPROCEDURE [[] []]

   ; make sure the procedure exists
   TRACEINSTRUCTION [ERASETEST.ERASEDPROCEDURE]
   FAILIFNOTTRUE  [PROCEDURE? "ERASETEST.ERASEDPROCEDURE]
   FAILIFNOTTRUE  [MEMBER?    "ERASETEST.ERASEDPROCEDURE (ITEM 1 CONTENTS) ]

   ; erase the procedure
   TRACEINSTRUCTION [ERASE "ERASETEST.ERASEDPROCEDURE]

   ; make sure the procedure is erased
   RUNIDONTKNOWHOWTOTEST [ERASETEST.ERASEDPROCEDUE]
   FAILIFNOTFALSE [PROCEDURE? "ERASETEST.ERASEDPROCEDURE]
   FAILIFNOTFALSE [MEMBER?    "ERASETEST.ERASEDPROCEDURE (ITEM 1 CONTENTS) ]

END


TO ERASETEST.ERASEVARIABLE

   MAKE "ERASETEST.VARIABLE 123

   ; make sure the variable exists
   FAILIFNOTTRUE  [MEMBERP "ERASETEST.VARIABLE (ITEM 2 NAMES) ]

   ; erase the variable
   TRACEINSTRUCTION [ERASE NAMELIST "ERASETEST.VARIABLE]

   ; make sure the variable is erased
   FAILIFNOTFALSE [MEMBERP "ERASETEST.VARIABLE (ITEM 2 NAMES) ]

   ; make sure the erased variable can't still be used
   RUNHASNOVALUETEST [SHOW :ERASETEST.VARIABLE = 123]

END

TO ERASETEST.ERN

   MAKE "ERASETEST.VARIABLE1 123
   MAKE "ERASETEST.VARIABLE2 321

   ; make sure the variables exist
   FAILIFNOTTRUE [MEMBERP "ERASETEST.VARIABLE1 (ITEM 2 NAMES) ]
   FAILIFNOTTRUE [MEMBERP "ERASETEST.VARIABLE2 (ITEM 2 NAMES) ]

   ; erase the variables
   TRACEINSTRUCTION [ERN [ERASETEST.VARIABLE1 ERASETEST.VARIABLE2]]

   ; make sure the variables are erased
   FAILIFNOTFALSE [MEMBERP "ERASETEST.VARIABLE1 (ITEM 2 NAMES) ]
   FAILIFNOTFALSE [MEMBERP "ERASETEST.VARIABLE2 (ITEM 2 NAMES) ]

   ; make sure the erased variable can't still be used
   RUNHASNOVALUETEST [:ERASETEST.VARIABLE1 = 123]
   RUNHASNOVALUETEST [:ERASETEST.VARIABLE2 = 321]

END

TO ERASETEST.ERASEPROPERTYLIST

   ; create the propery list
   TRACEINSTRUCTION [PPROP "ERASETEST.ERASEDPLIST "SOMEPROPERTY 123]

   ; make sure the propery list exists
   SIMPLEREPORTTEST [GPROP   "ERASETEST.ERASEDPLIST "SOMEPROPERTY] 123
   FAILIFNOTTRUE    [MEMBERP "ERASETEST.ERASEDPLIST (ITEM 3 PLISTS) ]

   ; erase the propery list
   TRACEINSTRUCTION [ERASE PLLIST "ERASETEST.ERASEDPLIST]

   ; make sure the propery list is erased
   SIMPLEREPORTTEST [GPROP "ERASETEST.ERASEDPLIST "SOMEPROPERTY] []
   FAILIFNOTFALSE   [MEMBERP "ERASETEST.ERASEDPLIST (ITEM 3 PLISTS) ]

END

TO ERASETEST.ERPL

   ; create the propery lists
   TRACEINSTRUCTION [PPROP "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY 123]
   TRACEINSTRUCTION [PPROP "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY 321]

   ; make sure the propery list exists
   SIMPLEREPORTTEST [GPROP   "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY   ] 123
   FAILIFNOTTRUE    [MEMBERP "ERASETEST.ERASEDPLIST1 (ITEM 3 PLISTS) ]
   SIMPLEREPORTTEST [GPROP   "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY   ] 321
   FAILIFNOTTRUE    [MEMBERP "ERASETEST.ERASEDPLIST2 (ITEM 3 PLISTS) ]

   ; erase the propery lists
   TRACEINSTRUCTION [ERPL [ERASETEST.ERASEDPLIST1 ERASETEST.ERASEDPLIST2]]

   ; make sure the propery lists are erased
   SIMPLEREPORTTEST [GPROP   "ERASETEST.ERASEDPLIST1 "SOMEPROPERTY   ] []
   FAILIFNOTFALSE   [MEMBERP "ERASETEST.ERASEDPLIST1 (ITEM 3 PLISTS) ]
   SIMPLEREPORTTEST [GPROP   "ERASETEST.ERASEDPLIST2 "SOMEPROPERTY   ] []
   FAILIFNOTFALSE   [MEMBERP "ERASETEST.ERASEDPLIST2 (ITEM 3 PLISTS) ]

END

TO ERASETEST.BADINPUT

   ; bad input for ERASE
   TRACEINSTRUCTION       [(ERASE [[nonexistent] [nonexistent] [nonexistent]])]
   RUNNOTENOUGHINPUTSTEST [(ERASE)]
   RUNTOOMANYINPUTSTEST   [(ERASE "name "toomany)]
   RUNBADINPUTTEST        [(ERASE {name})]
   RUNBADINPUTTEST        [(ERASE [[a][b]{c}])]
   RUNBADINPUTTEST        [(ERASE [a b {c}])]
   RUNBADINPUTTEST        [(ERASE [[a b {c}]])]
   RUNBADINPUTTEST        [(ERASE [[a][b][c][d]])]
   RUNBADINPUTTEST        [(ERASE [[[a]]])]
   RUNISAPRIMITIVETEST    [ERASE "FORWARD]

   ; bad input for ERALL
   RUNBADINPUTTEST [(ERALL 10)]
   RUNBADINPUTTEST [(ERALL [])]
   RUNBADINPUTTEST [(ERALL {a})]
   RUNBADINPUTTEST [(ERALL "no)]
   RUNTOOMANYINPUTSTEST [(ERALL "false "toomany)]

   ; bad input for ERPS
   RUNTOOMANYINPUTSTEST [(ERPS "toomany)]

   ; bad input for ERNS
   RUNTOOMANYINPUTSTEST [(ERNS "toomany)]

   ; bad input for ERPLS
   RUNTOOMANYINPUTSTEST [(ERPLS "toomany)]

   ; bad input for ERN
   RUNNOTENOUGHINPUTSTEST [(ERN)]
   RUNTOOMANYINPUTSTEST   [(ERN "a "toomany)]
   RUNBADINPUTTEST        [(ERN {a})]

   ; bad input for ERPL
   RUNNOTENOUGHINPUTSTEST [(ERPL)]
   RUNTOOMANYINPUTSTEST   [(ERPL "a "toomany)]
   RUNBADINPUTTEST        [(ERPL {a})]

END

TO ERASETEST.ERASEALL

   ; We can't run our tests if we erase all procedures, 
   ; so we just test for not erasing anything.

   UIAUTOMATION.INITIALIZE

   CATCH "ERROR [

     ; Run ERALL and Say No (don't erase everything)
     UIAUTOMATION.POSTBUTTONPUSHTOWINDOW [Warning] "&No
     TRACEINSTRUCTION [ ERALL ]

     ; make sure that nothing was erased
     FAILIFNOTTRUE [PROCEDURE? "ERASETEST.ERASEALL]
   ]

   IGNORE FAILIFERROR "ERASETEST.ERASEALL

   UIAUTOMATION.UNINITIALIZE
END

TO ERASETEST

   ERASETEST.ERASEPROCEDURE
   ERASETEST.ERASEVARIABLE
   ERASETEST.ERASEPROPERTYLIST
   ERASETEST.ERN
   ERASETEST.ERPL
   ERASETEST.BADINPUT
   ERASETEST.ERASEALL

END
