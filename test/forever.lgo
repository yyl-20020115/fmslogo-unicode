LOAD "testlib.lgo

TO FOREVERTEST.OUTPUTINFOREVER
 
   LOCALMAKE "mylist []

   FOREVER [ 
      IF EQUAL? REPCOUNT 6 [ OUTPUT :mylist ]
      MAKE "mylist LPUT REPCOUNT :mylist 
   ]
END

TO FOREVERTEST.STOPINFOREVER

   LOCAL "myvalue

   FOREVER [ 
      MAKE "myvalue REPCOUNT
      IF EQUAL? :myvalue 50 [ STOP ]
      MAKE "myvalue 0
   ]
END

TO FOREVERTEST.ERRORINFOREVER

   LOCAL "myvalue

   FOREVER [ 
      MAKE "myvalue REPCOUNT
      IF EQUAL? :myvalue 50 [ THROW "ERROR ]
      MAKE "myvalue 0
   ]
END

TO FOREVERTEST.SMOKETEST

  ; stop in the middle of a FOREVER
  TRACEINSTRUCTION [ FOREVERTEST.STOPINFOREVER ] 

  ; output in the middle of a FOREVER
  SIMPLEREPORTTEST [ FOREVERTEST.OUTPUTINFOREVER ] [1 2 3 4 5]

  ; throw a user-exception in the the middle of a FOREVER
  RUNEXPECTERRORTEST [ FOREVERTEST.ERRORINFOREVER ] 21

  ; nested FOREVER loop
  RUNEXPECTERRORTEST [ FOREVER [ FOREVER [ IF REPCOUNT = 100 [ THROW "ERROR ] ] ] ] 21

END

TO FOREVERTEST.BADINPUT

  RUNNOTENOUGHINPUTSTEST [(FOREVER)]
  RUNTOOMANYINPUTSTEST   [(FOREVER [FORWARD 1] "toomany)]

  RUNBADINPUTTEST               [FOREVER  {}  ]
  RUNYOUDONTSAYWHATTODOWITHTEST [FOREVER  100 ]

END


TO FOREVERTEST

  FOREVERTEST.SMOKETEST
  FOREVERTEST.BADINPUT

END
