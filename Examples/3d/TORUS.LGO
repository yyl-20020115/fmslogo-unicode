to aaa
   ; This example covers the surface of a torus with each
   ; vertex of each polygon exactly on the surface with no overlaping
   ; polygons while letting logo do all the trig.
   ;
   ; This is easier to explain using a sphere as example.
   ; Place yourself in the center of a sphere and imagine you have
   ; a laser gun that can cut or mark the surface. Now you basically
   ; Shoot a dot on the surface (call that point A), then move your
   ; aim 5 degrees (:step) down, shoot another dot (call that point B).
   ; Now aim 5 degrees to the right, Shoot another dot (call that point C).
   ; Now aim 5 degrees up, shoot another dot. Now connect the 4 dots
   ; with a string and you have your polygon. Get the idea?

   perspective
   cs
   setsc [0 0 0]

   ht
   penup

   ; Time drawing
   localmake "start timemilli

   ; This is the color of the OBJECT not the color you'll see
   setpc [255 0 0]

   Torus 150 75 6

   ; Display elapsed drawing
   (print "Define (timemilli - :start) / 1000)

   ; Time shading
   make "start timemilli

   polyview

   ; Display elapsed shading
   (print "Render (timemilli - :start) / 1000)

   pendown
end

to Torus.GetPoint :rad
   fd :rad
   localmake "pos posxyz
   bk :rad
   output :pos
end

to Torus.Slice :rad1 :rad2 :step
   ; Draw an open ended cylinder
   local [i PointA PointB PointC PointD PointE]
   make "i 0
   repeat 360/:step [
     fd :rad1
     down :i
     make "PointA Torus.GetPoint :rad2
     down :step
     make "PointB Torus.GetPoint :rad2
     up :step
     up :i
     bk :rad1 
     rt :step
     fd :rad1
     down :i
     make "PointD Torus.GetPoint :rad2
     down :step
     make "PointC Torus.GetPoint :rad2
     up :step
     up :i
     bk :rad1 
     lt :step
     make "PointE posxyz
     setposxyz :PointA
     pendown
     polystart
     setposxyz :PointB
     setposxyz :PointC
     setposxyz :PointD
     setposxyz :PointA
     polyend
     penup
     setposxyz :PointE
     make "i :i + :step
   ]
end

to Torus :rad1 :rad2 :step
   ; Cover the surface of the torus with polygons
   repeat 360/:step [Torus.Slice :rad1 :rad2 :step rt :step]
end

to zzz
ifelse YesNoBox [Welcome] [Choose YES to run example now, Choose NO Study it now.] [aaa] [edall]
end

Make "startup [zzz]
