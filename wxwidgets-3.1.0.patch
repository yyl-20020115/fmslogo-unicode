diff -aur wxWidgets-3.1.0-src-original/src/richtext/richtextctrl.cpp wxWidgets-3.1.0-src/src/richtext/richtextctrl.cpp
--- wxWidgets-3.1.0-src-original/src/richtext/richtextctrl.cpp	2016-02-28 22:33:38.000000000 -0800
+++ wxWidgets-3.1.0-src/src/richtext/richtextctrl.cpp	2016-08-14 08:06:58.000000000 -0700
@@ -1831,6 +1831,15 @@
 /// This takes a _caret_ position.
 bool wxRichTextCtrl::ScrollIntoView(long position, int keyCode)
 {
+    // If we are delaying a full layout, they we also delay
+    // scrolling the position into view until after the layout
+    // is complete.
+    if (m_fullLayoutRequired)
+    {
+        m_fullLayoutSavedPosition = position;
+        return false;
+    }
+
     wxRichTextLine* line = GetVisibleLineForCaretPosition(position);
 
     if (!line)
Only in wxWidgets-3.1.0-src/src/richtext: richtextctrl.cpp~
diff -aur wxWidgets-3.1.0-src-original/src/stc/ScintillaWX.cpp wxWidgets-3.1.0-src/src/stc/ScintillaWX.cpp
--- wxWidgets-3.1.0-src-original/src/stc/ScintillaWX.cpp	2016-02-28 22:33:38.000000000 -0800
+++ wxWidgets-3.1.0-src/src/stc/ScintillaWX.cpp	2016-05-01 08:57:48.000000000 -0700
@@ -544,7 +544,10 @@
         evt.SetString(text);
         stc->GetEventHandler()->ProcessEvent(evt);
 
-        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(evt.GetString());
+        // Hold the updated string in a local variable to prevent "buf"
+        // from being deallocated before we're done with it.
+        const wxString updatedString = evt.GetString();
+        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(updatedString);
 
 #if wxUSE_UNICODE
         // free up the old character buffer in case the text is real big
diff -aur wxWidgets-3.1.0-src-original/src/stc/stc.cpp wxWidgets-3.1.0-src/src/stc/stc.cpp
--- wxWidgets-3.1.0-src-original/src/stc/stc.cpp	2016-02-28 22:33:38.000000000 -0800
+++ wxWidgets-3.1.0-src/src/stc/stc.cpp	2016-07-16 16:03:00.000000000 -0700
@@ -5118,7 +5118,7 @@
         }
 #else
         int key = evt.GetKeyCode();
-        if (key <= WXK_START || key > WXK_COMMAND) {
+        if (key < WXK_START || (WXK_SPECIAL1 <= key && key <= WXK_SPECIAL20)) {
             m_swx->DoAddChar(key);
             return;
         }
